apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    server {
    
      listen 80;
      server_name bitrix.local;
    
      client_max_body_size 8M; # __POST_SIZE_VALUE__
    
      proxy_read_timeout 888; # __TIMEOUT_VALUE__
      proxy_send_timeout 888; # __TIMEOUT_VALUE__
      proxy_connect_timeout 8; # __TIMEOUT_VALUE__
    
      root /var/www/app/web;
      index index.php index.html index.htm;
    
      location / {
        try_files $uri $uri/ /index.php?$query_string;
      }
    
      location ~ \.php$ {
    
        include fastcgi_params;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    
        fastcgi_read_timeout 888; # __TIMEOUT_VALUE__
      }
    }

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  bitrix.cnf: |
    [mysqld]
    default-time-zone = '+03:00' # __TIME_ZONE_VALUE__
    innodb_strict_mode = OFF

---

apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
data:
  # server: mysql.default.svc.cluster.local
  mysql-root-password: bWVvdzg4ODg4ODg4 #base64 (meow88888888)
  mysql-user-password: c2l0ZW1hbmFnZXI= #base64 (sitemanager)

#---
#
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: app-pv
#  labels:
#    type: local
#spec:
#  storageClassName: standard
#  capacity:
#    storage: 8Gi
#  accessModes:
#    - ReadWriteMany
#  hostPath:
#    path: /home/docker/app/pvc
#    type: DirectoryOrCreate
#  persistentVolumeReclaimPolicy: Retain

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-pvc
  namespace: default
spec:
#  volumeName: app-pv
  resources:
    requests:
      storage: 8Gi
  accessModes:
    - ReadWriteMany

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              value: sitemanager
            - name: MYSQL_USER
              value: sitemanager
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-user-password
          volumeMounts:
            - name: mysql-config
              mountPath: /etc/mysql/conf.d
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: k8s
              mountPath: /k8s
      volumes:
        - name: mysql-config
          configMap:
            name: mysql-config
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: k8s
          hostPath:
            path: /k8s

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: php
spec:
  replicas: 1
  selector:
    matchLabels:
      app: php
  template:
    metadata:
      labels:
        app: php
    spec:
      containers:
        - name: php
          image: k8s_bitrix_php
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "/k8s/scripts/php_bootstrap.sh"]
          volumeMounts:
            - name: app
              mountPath: /var/www/app
            - name: k8s
              mountPath: /k8s
      volumes:
        - name: app
          persistentVolumeClaim:
            claimName: app-pvc
        - name: k8s
          hostPath:
            path: /k8s

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
            - name: app
              mountPath: /var/www/app
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
        - name: app
          persistentVolumeClaim:
            claimName: app-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    app: mysql
  ports:
    - port: 3306

---

apiVersion: v1
kind: Service
metadata:
  name: php
spec:
  selector:
    app: php
  ports:
    - port: 9000

---

apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: nginx
  ports:
    - port: 80

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bitrix-ingress
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "8m" # __POST_SIZE_VALUE__
    nginx.ingress.kubernetes.io/client-body-buffer-size: "8m" # __POST_SIZE_VALUE__
    nginx.ingress.kubernetes.io/proxy-read-timeout: "888" # __TIMEOUT_VALUE__
    nginx.ingress.kubernetes.io/proxy-send-timeout: "888" # __TIMEOUT_VALUE__
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "8" # __TIMEOUT_VALUE__
spec:
  ingressClassName: nginx
  rules:
    - host: bitrix.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx
                port:
                  number: 80