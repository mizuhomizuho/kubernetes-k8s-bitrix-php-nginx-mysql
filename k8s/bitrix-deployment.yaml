apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        
        root /var/www/app/web;
        index index.php index.html index.htm;
    
        http {
            client_max_body_size 8M;
        }
        
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_pass php:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }
    }
    
---

#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: php-init
#data:
#  php_init.sh: |
#    #!/bin/sh
#    echo 'php_init.sh begin...'
#    ( curl -sSLf https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions -o - || echo 'return 1' ) | sh -s \
#      gd
#    echo 'php_init.sh end...'
    
---

apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
data:
  mysql-root-password: bWVvdzg4ODg4ODg4 #base64
  mysql-user-password: bWVvdzg= #base64
  
---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: app-volume
  labels:
    type: local
spec:
  storageClassName: fast-storage
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /src/app-volume
  persistentVolumeReclaimPolicy: Retain

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-pvc
  namespace: default
spec:
  volumeName: app-volume
  storageClassName: fast-storage
  resources:
    requests:
      storage: 10Gi
  accessModes:
    - ReadWriteMany

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  storageClassName: fast-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-root-password
        - name: MYSQL_DATABASE
          value: bitrix
        - name: MYSQL_USER
          value: bitrix_user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-user-password
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-pvc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: php
spec:
  replicas: 1
  selector:
    matchLabels:
      app: php
  template:
    metadata:
      labels:
        app: php
    spec:
#      initContainers:
#        - name: php-init
#          image: php:8.1-cli
##          command: ["sh", "-c", "/php_init/php_init.sh"]
#          command: ["sh", "-c", "/var/www/app/k8s/php-init.sh"]
#          volumeMounts:
##            - name: php-common
##              mountPath: /var/www/php_common
##            - name: php-init
##              mountPath: /php_init
#            - name: app-data
#              mountPath: /var/www/app
      containers:
      - name: php
#        image: php:8.1-fpm
        image: php81fpm-v1:latest
        command: ["sh", "-c", "/var/www/app/k8s/php-bootstrap.sh"]
#        args: ["/bin/sh", "-c", "/var/www/app/php_bootstrap.sh"]
        volumeMounts:
#        - name: php-init
#          mountPath: /php_init
        - name: app-data
          mountPath: /var/www/app
#        - name: php-common
#          mountPath: /var/www/php_common
      volumes:
      - name: app-data
        persistentVolumeClaim:
          claimName: app-pvc
#      - name: php-init
#        configMap:
#          name: php-init
#      - name: php-common
#        emptyDir: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        - name: app-data
          mountPath: /var/www/app
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: app-data
        persistentVolumeClaim:
          claimName: app-pvc

---
          
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
    
---

apiVersion: v1
kind: Service
metadata:
  name: php
spec:
  selector:
    app: php
  ports:
    - port: 9000
    
---

apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: nginx
  ports:
    - port: 80

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bitrix-ingress
spec:
  rules:
  - host: bitrix.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx
            port:
              number: 80
